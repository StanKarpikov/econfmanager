syntax = "proto3";

package options;

import "custom_types.proto";
import "google/protobuf/descriptor.proto";

extend google.protobuf.FileOptions {
    int32 version = 60001;
}

enum ValidationMethod {
    NONE = 0;            // Default: no validation
    RANGE = 1;           // Validate using min/max
    ALLOWED_VALUES = 2;  // Validate using a list of allowed values
    CUSTOM_CALLBACK = 3; // Validate using a callback function
}

message ParameterValue {
    oneof value_type {
        bool val_bool = 1;
        int32 val_int32 = 2;
        uint32 val_uint32 = 3;
        int64 val_int64 = 4;
        uint64 val_uint64 = 5;
        float val_float32 = 6;
        double val_float64 = 7;
        string val_str = 8;
        string val_path = 9;
        custom_types.CustomType val_custom = 10;
    }
}

extend google.protobuf.FieldOptions {
    ValidationMethod validation = 50001;              /* Validation method, applied when the parameter is set */
    ParameterValue min = 50002;                       /* With validation:range the minimum value of the parameter */
    ParameterValue max = 50003;                       /* With validation:range the maximum value of the parameter */
    repeated ParameterValue allowed_values = 50004;   /* A list of allowed values for the parameters. It is used for enums, but can also limit other types */
    string custom_callback = 50005;                   /* A callback for parameter validation (TODO, not implemented) */
    string comment = 50006;                           /* Comment, description */
    ParameterValue default_value = 50007;             /* Default value of the parameter is assigned if it is not found in the database or cannot be read */
    bool is_const = 50008;                            /* Const parameters cannot be changed and only use the default value */
    repeated string tags = 50009;                     /* Custom tags for the parameter */
    bool runtime = 50010;                             /* Runtime paramteres are not saved to the permanent storage, but they persist between program restarts if the temporary database is not deleted */
    string title = 50011;                             /* Title of the parameter */
    bool readonly = 50012;                            /* Readonly parameters cannot be changed in the UI (JSONRPC Server) */
    bool internal = 50013;                            /* Internal parameters are not shown in the UI (JSONRPC Server) */
    bool writeonly = 50014;                           /* Write only parameters are not transmitted to the UI */
}
