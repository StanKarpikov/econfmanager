syntax = "proto3";

import "options.proto";
import "parameter_ids.proto";

package parameters;

enum StatusCode {
    STATUS_OK = 0;                                         /* No error */

    WARNING_PARAMETER_OUT_OF_RANGE_FIXED = 1;              /* The parameter's valid range was exceeded, it was trimmed to the nearest valid value and applied */

    ERROR_DECODE = 2;                                      /* Could not decode Protobuf payload */
    ERROR_PARAMETER_ACCESS_DENIED = 3;                     /* Access denied (e.g. attempt to write a read-only parameter) */
    ERROR_PARAMETER_ID_NOT_FOUND = 4;                      /* Provided Id could not be found */
    ERROR_PARAMETER_NOT_VALID = 5;                         /* Parameter is not valid and could not be fixed */
}

service ParameterService {
  rpc ReadParameter (ReadParameterRequest) returns (ReadParameterResponse);
  rpc WriteParameter (WriteParameterRequest) returns (WriteParameterResponse);
  
  rpc ParameterNotifications (NotificationSubscription) returns (stream ParameterNotification);
}

message ReadParameterRequest {
  ParameterId id = 1;
}

message ReadParametersRequest {
  repeated ParameterId ids = 1;
}

message WriteParameterRequest {
  ParameterId id = 1;
  ParameterValue value = 2;
}

message ReadParameterResponse {
  StatusCode status = 1;
  ParameterValue value = 2;
}

message WriteParameterResponse {
  StatusCode status = 1;
}

message ParameterNotification {
  ParameterId id = 1;
  ParameterValue value = 2;
}

message NotificationSubscription {
}